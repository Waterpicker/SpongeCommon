{
    "required": true,
    "minVersion": "0.7.10",
    "package": "org.spongepowered.common.mixin.core",
    "refmap": "mixins.common.refmap.json",
    "plugin": "org.spongepowered.common.mixin.plugin.CorePlugin",
    "target": "@env(DEFAULT)",
    "compatibilityLevel": "JAVA_8",
    "mixins": [
        "util.registry.Bootstrap_10Mixin",
        "util.registry.Bootstrap_11Mixin",
        "util.registry.BootstrapMixin",
        "advancements.AdvancementListMixin",
        "advancements.AdvancementManagerMixin",
        "advancements.AdvancementMixin",
        "advancements.AdvancementProgressMixin",
        "advancements.AdvancementTreeNodeMixin",
        "advancements.CriteriaTriggersMixin",
        "advancements.CriterionMixin",
        "advancements.CriterionProgressMixin",
        "advancements.DisplayInfoMixin",
        "advancements.ICriterionTrigger_ListenerMixin",
        "advancements.ICriterionTriggerMixin",
        "advancements.PlayerAdvancementsMixin",
        "api.text.LiteralTextMixin",
        "api.text.ScoreTextMixin",
        "api.text.SelectorTextMixin",
        "api.text.TextMixin",
        "api.text.TranslatableTextMixin",
        "api.world.LocationMixin",
        "authlib.yggdrasil.response.ProfileSearchResultsResponseSerializerMixin",
        "authlib.PropertyMapMixin",
        "authlib.properties.PropertyMixin",
        "block.BeaconBlockMixin",
        "block.BedBlockMixin",
        "block.CactusBlockMixin",
        "block.CommandBlockMixin",
        "block.DispenserBlockMixin",
        "block.BlockEventDataMixin",
        "block.FallingBlockMixin",
        "block.FarmlandBlockMixin",
        "block.FireBlockMixin",
        "block.LeavesBlockMixin",
        "block.MagmaBlockMixin",
        "block.BlockMixin",
        "block.NoteBlockMixin",
        "block.CarvedPumpkinBlockMixin",
        "block.TNTBlockMixin",
        "entity.ActiveChunkReferentMixin",
        "brigadier.context.CommandContextBuilderMixin",
        "brigadier.tree.RootCommandNodeMixin",
        "command.CommandsMixin",
        "common.entity.player.SpongeUserMixin",
        "data.CustomDataHolderMixin",
        "dispenser.ProjectileDispenseBehaviorMixin",
        "enchantment.EnchantmentMixin",
        "entity.AgeableEntityMixin",
        "entity.item.HangingEntityMixin",
        "entity.LivingEntityMixin",
        "entity.MobEntityMixin",
        "entity.EntityMixin",
        "entity.GrieferBridgeMixin",
        "entity.ai.goal.GoalMixin",
        "entity.ai.goal.BreakDoorGoalMixin",
        "entity.ai.goal.EatGrassGoalMixin",
        "entity.ai.goal.BreedGoalMixin",
        "entity.ai.goal.RunAroundLikeCrazyGoalMixin",
        "entity.ai.goal.SwimGoalMixin",
        "entity.ai.goal.GoalSelectorMixin",
        "entity.ai.goal.LookAtGoalMixin",
        "entity.boss.dragon.EnderDragonEntityMixin",
        "entity.boss.WitherEntityMixin",
        "entity.effect.LightningBoltEntityMixin",
        "entity.item.ArmorStandEntityMixin",
        "entity.item.BoatEntityMixin",
        "entity.item.EnderCrystalEntityMixin",
        "entity.item.EyeOfEnderEntityMixin",
        "entity.item.EnderPearlEntityMixin",
        "entity.item.FallingBlockEntityMixin",
        "entity.item.FireworkRocketEntityMixin",
        "entity.item.ItemFrameEntityMixin",
        "entity.item.ItemEntityMixin",
        "entity.item.minecart.MinecartCommandBlockEntityMixin",
        "entity.item.minecart.ContainerMinecartEntityMixin",
        "entity.item.minecart.FurnaceMinecartEntityMixin",
        "entity.item.minecart.AbstractMinecartEntityMixin",
        "entity.item.minecart.TNTMinecartEntityMixin",
        "entity.item.TNTEntityMixin",
        "entity.monster.BlazeEntity_FireballAttackGoalMixin",
        "entity.monster.CreeperEntityMixin",
        "entity.monster.EndermanEntity_PlaceBlockGoalMixin",
        "entity.monster.EndermanEntity_TakeBlockGoalMixin",
        "entity.monster.EndermanEntityMixin",
        "entity.monster.GhastEntity_FireballAttackGoalMixin",
        "entity.monster.MonsterEntityMixin",
        "entity.monster.ZombiePigmanEntityMixin",
        "entity.monster.ShulkerEntityMixin",
        "entity.monster.SilverfishEntity_HideInStoneGoalMixin",
        "entity.monster.SilverfishEntity_SummonSilverfishGoalMixin",
        "entity.passive.SnowGolemEntityMixin",
        "entity.passive.OcelotEntityMixin",
        "entity.passive.ParrotEntityMixin",
        "entity.passive.RabbitEntity_RaidFarmGoalMixin",
        "entity.merchant.villager.VillagerEntityMixin",
        "entity.passive.WolfEntityMixin",
        "entity.player.ChatVisibilityMixin",
        "entity.player.PlayerEntityMixin",
        "entity.player.ServerPlayerEntityMixin",
        "entity.projectile.AbstractArrowEntityMixin",
        "entity.projectile.EggEntityMixin",
        "entity.projectile.DamagingProjectileEntityMixin",
        "entity.projectile.FishingBobberEntityMixin",
        "entity.projectile.FireballEntityMixin",
        "entity.projectile.ShulkerBulletEntityMixin",
        "entity.projectile.SmallFireballEntityMixin",
        "entity.projectile.SnowballEntityMixin",
        "entity.projectile.ThrowableEntityMixin",
        "entity.projectile.WitherSkullEntityMixin",
        "item.DyeItemMixin",
        "item.EnderEyeItemMixin",
        "item.FishingRodItemMixin",
        "item.FilledMapItemMixin",
        "item.ItemMixin",
        "item.ItemStackMixin",
        "item.WritableBookItemMixin",
        "item.WrittenBookItemMixin",
        "nbt.CompoundNBTMixin",
        "network.LegacyPingHandlerMixin",
        "network.play.ServerPlayNetHandlerMixin",
        "network.status.ServerStatusNetHandlerMixin",
        "network.NetworkManagerMixin",
        "network.ServerStatusResponseMixin",
        "network.datasync.DataParameterMixin",
        "network.datasync.EntityDataManagerMixin",
        "network.play.server.SChunkDataPacketMixin",
        "network.play.server.SSendResourcePackPacketMixin",
        "network.play.server.SScoreboardObjectivePacketMixin",
        "network.play.server.SWorldBorderPacketMixin",
        "potion.EffectMixin",
        "potion.PotionMixin",
        "scoreboard.ScoreboardMixin",
        "scoreboard.ScoreMixin",
        "scoreboard.ScoreObjectiveMixin",
        "scoreboard.ScorePlayerTeamMixin",
        "scoreboard.ServerScoreboardMixin",
        "scoreboard.TeamMixin",
        "server.MinecraftServerMixin",
        "server.management.PlayerListMixin",
        "server.management.PlayerInteractionManagerMixin",
        "server.management.PlayerProfileCache_ProfileEntryMixin",
        "server.management.PlayerProfileCacheMixin",
        "server.management.ProfileBanEntryMixin",
        "server.management.BanEntryMixin",
        "server.management.UserListEntryMixin",
        "server.management.IPBanEntryMixin",
        "network.handshake.ServerHandshakeNetHandlerMixin",
        "network.login.ServerLoginNetHandler_2Mixin",
        "network.login.ServerLoginNetHandlerMixin",
        "service.permission.SubjectMixin",
        "stats.StatMixin",
        "stats.StatisticsManagerMixin",
        "stats.StatsMixin",
        "world.spawner.AbstractSpawnerMixin",
        "tileentity.BannerTileEntityMixin",
        "tileentity.BeaconTileEntityMixin",
        "tileentity.BrewingStandTileEntityMixin",
        "tileentity.ChestTileEntityMixin",
        "tileentity.CommandBlockTileEntityMixin",
        "tileentity.DispenserTileEntityMixin",
        "tileentity.EnchantmentTableTileEntityMixin",
        "tileentity.EnderChestTileEntityMixin",
        "tileentity.FurnaceTileEntityMixin",
        "tileentity.HopperTileEntityMixin",
        "tileentity.LockableLootTileEntityMixin",
        "tileentity.LockableTileEntityMixin",
        "tileentity.TileEntityMixin",
        "tileentity.MobSpawnerTileEntityMixin",
        "tileentity.PistonTileEntityMixin",
        "tileentity.ShulkerBoxTileEntityMixin",
        "tileentity.SignTileEntityMixin",
        "tileentity.SkullTileEntityMixin",
        "tileentity.StructureBlockTileEntityMixin",
        "util.ClassInheritanceMultiMapMixin",
        "util.CooldownTracker_CooldownMixin",
        "util.CooldownTrackerMixin",
        "util.CooldownTrackerServerMixin",
        "util.DamageSourceMixin",
        "util.EntityDamageSourceMixin",
        "util.EntityPredicatesMixin",
        "util.DirectionMixin",
        "util.IndirectEntityDamageSourceMixin",
        "network.PacketThreadUtil_1Mixin",
        "util.math.BlockPos_MutableBlockPosMixin",
        "util.math.Vec3iMixin",
        "util.text.StyleMixin",
        "util.text.TextComponentMixin",
        "util.text.KeybindTextComponentMixin",
        "util.text.ScoreTextComponentMixin",
        "util.text.SelectorTextComponentMixin",
        "util.text.StringTextComponentMixin",
        "util.text.TranslationTextComponentMixin",
        "util.text.TextFormattingMixin",
        "util.text.event.ClickEventMixin",
        "util.text.event.HoverEventMixin",
        "world.RegionMixin",
        "world.dimension.DimensionTypeMixin",
        "world.ExplosionMixin",
        "world.GameRulesMixin",
        "world.NextTickListEntryMixin",
        "world.TeleporterMixin",
        "world.spawner.WorldEntitySpawnerMixin",
        "world.WorldMixin",
        "world.dimension.NetherDimensionMixin",
        "world.dimension.DimensionMixin",
        "world.server.ServerWorldMixin",
        "world.ServerWorldMultiMixin",
        "world.WorldSettingsMixin",
        "world.biome.DesertBiomeMixin",
        "world.biome.ForestBiomeMixin",
        "world.biome.NetherBiomeMixin",
        "world.biome.JungleBiomeMixin",
        "world.biome.BiomeMixin",
        "world.biome.PlainsBiomeMixin",
        "world.biome.SavannaBiomeMixin",
        "world.biome.TaigaBiomeMixin",
        "world.chunk.BlockStateContainerMixin",
        "world.chunk.ChunkMixin",
        "world.end.DragonFightManagerMixin",
        "world.storage.SaveHandlerMixin",
        "world.storage.WorldInfoMixin"
    ],
    "server": [
        "network.rcon.RConConsoleSourceMixin",
        "network.rcon.ClientThreadMixin",
        "server.dedicated.DedicatedPlayerListMixin",
        "server.dedicated.DedicatedServerMixin",
        "server.management.UserListMixin"
    ],
    "injectors": {
        "defaultRequire": 1
    },
    "overwrites": {
        "conformVisibility": true
    }
}
